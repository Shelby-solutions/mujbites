plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    id 'dev.flutter.flutter-gradle-plugin'
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new Exception("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '3'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0.2'
}

android {
    namespace "com.mujbites.mujbites"
    compileSdkVersion rootProject.ext.compileSdkVersion
    ndkVersion flutter.ndkVersion

    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility rootProject.ext.javaVersion
        targetCompatibility rootProject.ext.javaVersion
    }

    kotlinOptions {
        jvmTarget = rootProject.ext.javaVersion.toString()
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "com.mujbites.mujbites"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86_64'
        }
    }

    signingConfigs {
        release {
            storeFile file("./key.jks")
            storePassword "Camila@19"
            keyAlias "key"
            keyPassword "Camila@19"
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            minifyEnabled true
            shrinkResources true
            
            firebaseCrashlytics {
                nativeSymbolUploadEnabled true
                unstrippedNativeLibsDir 'build/app/intermediates/merged_native_libs/release/out/lib'
            }
            
            applicationVariants.all { variant ->
                variant.outputs.all {
                    if (variant.buildType.name == "release") {
                        outputFileName = "mujbites-v${defaultConfig.versionName}.apk"
                    }
                }
            }
        }
        debug {
            firebaseCrashlytics {
                mappingFileUploadEnabled false
            }
            applicationIdSuffix ""
            versionNameSuffix "-debug"
        }
    }

    lint {
        checkReleaseBuilds true
        abortOnError true
    }
}

flutter {
    source '../..'
}

dependencies {
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.2.2'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.window:window:1.0.0'
    implementation 'androidx.window:window-java:1.0.0'
    implementation 'com.google.android.gms:play-services-tasks:18.1.0'
    implementation('com.google.android.play:core:1.10.3') {
        exclude group: 'com.google.android.play', module: 'app-update'
    }
    implementation('com.google.android.play:feature-delivery:2.1.0') {
        exclude group: 'com.google.android.play', module: 'core'
    }
    implementation('com.google.android.play:core-common:2.0.3') {
        exclude group: 'com.google.android.play', module: 'core'
    }
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.google.firebase:firebase-messaging'
    implementation 'com.google.firebase:firebase-crashlytics'
    
    // AndroidX Dependencies
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'androidx.work:work-runtime-ktx:2.8.1'
}

configurations.all {
    exclude group: 'com.google.android.play', module: 'core'
    exclude group: 'com.google.android.play', module: 'app-update'
    exclude group: 'com.google.android.play', module: 'feature-delivery'
    exclude group: 'com.google.android.play', module: 'core-common'
}

gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
    }
}

// Add ProGuard rules for Play Core libraries
android.buildTypes.release.proguardFiles += new File('proguard-play-core.pro')
